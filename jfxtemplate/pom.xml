<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>jp.seraphyware.javafxexam</groupId>
	<artifactId>jfxexam1</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>jar</packaging>

	<name>jfxexam1</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClassFQCN>jp.seraphyware.javafxexam.jfxexam1.MainApp</mainClassFQCN>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<deltaspike.version>1.8.1</deltaspike.version>
		<slf4j.version>1.7.12</slf4j.version>
		<log4j2.version>2.4.1</log4j2.version>
		<openjfx.version>11</openjfx.version>
	</properties>

	<build>
		<plugins>
			<!-- コンパイラ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
			</plugin>
			<!-- 依存パッケージへのクラスパスとメインクラスのあるMANIFESTをもつJARの作成 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib</classpathPrefix>
							<mainClass>${mainClassFQCN}</mainClass>
						</manifest>
						<manifestEntries>
							<!-- 起動時のスプラッシュ画像 <SplashScreen-Image>splash-image.png</SplashScreen-Image> -->
							<!-- <Implementation-Vendor><![CDATA[Copyright xxxxxx]]></Implementation-Vendor> -->
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- 依存するパッケージ(無名パッケージ)をlibフォルダに出力する -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<!-- JavaFXはモジュール用フォルダに格納する -->
							<excludeGroupIds>org.openjfx</excludeGroupIds>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-mods</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/mods</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<!-- JavaFXはモジュール用フォルダに格納する -->
							<includeGroupIds>org.openjfx</includeGroupIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${openjfx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${openjfx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-web -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>${openjfx.version}</version>
		</dependency>

		<!-- controlsfx -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>9.0.0</version>
		</dependency>

		<!-- commons lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>

		<!-- DeltaSpike -->
		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-api</artifactId>
			<version>${deltaspike.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>

		<!-- DeltaSpike (BeanProviderの利用のため) -->
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<version>${deltaspike.version}</version>
			<scope>compile</scope>
		</dependency>


		<!-- CDI標準アノテーションなど -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-shaded</artifactId>
			<version>3.0.5.Final</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Common Annotations for the Java Platform https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
			(@PostConstructなどのアノテーションの定義) -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- DeltaSpikeとWeldの連携 -->
		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-weld</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>

		<!-- Weldで、Jandexによるbean探索を可能にする -->
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
			<version>2.0.0.Final</version>
		</dependency>

		<!-- Deltaspikeによるテスト -->
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-test-control-module-api</artifactId>
			<version>${deltaspike.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-test-control-module-impl</artifactId>
			<version>${deltaspike.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- SLF4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Commons-LoggingをSLF4Jで置き換える -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- java.util.Loggingをslf4jに転送する -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- SLF4Jのログ実装をLog4j2にする -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<!-- LOG4J2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- テストモック https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>launch4j</id>
			<activation>
				<jdk>(,1.8]</jdk>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<exename>${project.artifactId}.exe</exename>
			</properties>
			<build>
				<plugins>
					<plugin>
						<!-- Launch4jによるjarファイルのexe化を行う. http://launch4j.sourceforge.net/docs.html -->
						<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
						<artifactId>launch4j-plugin</artifactId>
						<version>1.5.0.0</version>
						<executions>
							<execution>
								<id>l4j-gui</id>
								<phase>package</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<outfile>target/${exename}</outfile>
									<jar>target/${project.artifactId}.jar</jar>
									<errTitle>Failed to execute the ${exename}</errTitle>
									<icon>app.ico</icon>
									<jre>
										<path>jre</path>
										<minVersion>1.8.0_40</minVersion>
										<initialHeapSize>64</initialHeapSize>
										<maxHeapSize>64</maxHeapSize>
									</jre>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
